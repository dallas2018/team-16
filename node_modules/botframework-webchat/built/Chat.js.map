{"version":3,"file":"Chat.js","sourceRoot":"","sources":["../src/Chat.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { Activity, CardActionTypes, DirectLine, DirectLineOptions, IBotConnection, User } from 'botframework-directlinejs';\nimport { Provider } from 'react-redux';\nimport { getTabIndex } from './getTabIndex';\nimport * as konsole from './Konsole';\nimport { Speech } from './SpeechModule';\nimport { SpeechOptions } from './SpeechOptions';\nimport { ChatActions, createStore, sendMessage } from './Store';\nimport { ActivityOrID, FormatOptions } from './Types';\n\nexport interface ChatProps {\n    adaptiveCardsHostConfig: any;\n    bot: User;\n    botConnection?: IBotConnection;\n    chatTitle?: boolean | string;\n    directLine?: DirectLineOptions;\n    disabled?: boolean;\n    formatOptions?: FormatOptions;\n    locale?: string;\n    resize?: 'none' | 'window' | 'detect';\n    selectedActivity?: BehaviorSubject<ActivityOrID>;\n    sendTyping?: boolean;\n    showUploadButton?: boolean;\n    speechOptions?: SpeechOptions;\n    user: User;\n}\n\nimport { History } from './History';\nimport { MessagePane } from './MessagePane';\nimport { Shell, ShellFunctions } from './Shell';\n\nexport class Chat extends React.Component<ChatProps, {}> {\n\n    private store = createStore();\n\n    private botConnection: IBotConnection;\n\n    private activitySubscription: Subscription;\n    private connectionStatusSubscription: Subscription;\n    private selectedActivitySubscription: Subscription;\n    private shellRef: React.Component & ShellFunctions;\n    private historyRef: React.Component;\n    private chatviewPanelRef: HTMLElement;\n\n    private resizeListener = () => this.setSize();\n\n    // tslint:disable:variable-name\n    private _handleCardAction = this.handleCardAction.bind(this);\n    private _handleKeyDownCapture = this.handleKeyDownCapture.bind(this);\n    private _saveChatviewPanelRef = this.saveChatviewPanelRef.bind(this);\n    private _saveHistoryRef = this.saveHistoryRef.bind(this);\n    private _saveShellRef = this.saveShellRef.bind(this);\n    // tslint:enable:variable-name\n\n    constructor(props: ChatProps) {\n        super(props);\n\n        konsole.log('BotChat.Chat props', props);\n\n        this.store.dispatch<ChatActions>({\n            type: 'Set_Locale',\n            locale: props.locale || (window.navigator as any).userLanguage || window.navigator.language || 'en'\n        });\n\n        if (props.adaptiveCardsHostConfig) {\n            this.store.dispatch<ChatActions>({\n                type: 'Set_AdaptiveCardsHostConfig',\n                payload: props.adaptiveCardsHostConfig\n            });\n        }\n\n        let { chatTitle } = props;\n\n        if (props.formatOptions) {\n            console.warn('DEPRECATED: \"formatOptions.showHeader\" is deprecated, use \"chatTitle\" instead. See https://github.com/Microsoft/BotFramework-WebChat/blob/master/CHANGELOG.md#formatoptionsshowheader-is-deprecated-use-chattitle-instead.');\n\n            if (typeof props.formatOptions.showHeader !== 'undefined' && typeof props.chatTitle === 'undefined') {\n                chatTitle = props.formatOptions.showHeader;\n            }\n        }\n\n        if (typeof chatTitle !== 'undefined') {\n            this.store.dispatch<ChatActions>({ type: 'Set_Chat_Title', chatTitle });\n        }\n\n        this.store.dispatch<ChatActions>({ type: 'Toggle_Upload_Button', showUploadButton: props.showUploadButton !== false });\n\n        if (props.sendTyping) {\n            this.store.dispatch<ChatActions>({ type: 'Set_Send_Typing', sendTyping: props.sendTyping });\n        }\n\n        if (props.speechOptions) {\n            Speech.SpeechRecognizer.setSpeechRecognizer(props.speechOptions.speechRecognizer);\n            Speech.SpeechSynthesizer.setSpeechSynthesizer(props.speechOptions.speechSynthesizer);\n        }\n    }\n\n    private handleIncomingActivity(activity: Activity) {\n        const state = this.store.getState();\n        switch (activity.type) {\n            case 'message':\n                this.store.dispatch<ChatActions>({ type: activity.from.id === state.connection.user.id ? 'Receive_Sent_Message' : 'Receive_Message', activity });\n                break;\n\n            case 'typing':\n                if (activity.from.id !== state.connection.user.id) {\n                    this.store.dispatch<ChatActions>({ type: 'Show_Typing', activity });\n                }\n                break;\n        }\n    }\n\n    private setSize() {\n        this.store.dispatch<ChatActions>({\n            type: 'Set_Size',\n            width: this.chatviewPanelRef.offsetWidth,\n            height: this.chatviewPanelRef.offsetHeight\n        });\n    }\n\n    private handleCardAction() {\n        // After the user click on any card action, we will \"blur\" the focus, by setting focus on message pane\n        // This is for after click on card action, the user press \"A\", it should go into the chat box\n        const historyDOM = findDOMNode(this.historyRef) as HTMLElement;\n\n        if (historyDOM) {\n            historyDOM.focus();\n        }\n    }\n\n    private handleKeyDownCapture(evt: React.KeyboardEvent<HTMLDivElement>) {\n        const target = evt.target as HTMLElement;\n        const tabIndex = getTabIndex(target);\n\n        if (\n            evt.altKey\n            || evt.ctrlKey\n            || evt.metaKey\n            || (!inputtableKey(evt.key) && evt.key !== 'Backspace')\n        ) {\n            // Ignore if one of the utility key (except SHIFT) is pressed\n            // E.g. CTRL-C on a link in one of the message should not jump to chat box\n            // E.g. \"A\" or \"Backspace\" should jump to chat box\n            return;\n        }\n\n        if (\n            target === findDOMNode(this.historyRef)\n            || typeof tabIndex !== 'number'\n            || tabIndex < 0\n        ) {\n            evt.stopPropagation();\n\n            let key: string;\n\n            // Quirks: onKeyDown we re-focus, but the newly focused element does not receive the subsequent onKeyPress event\n            //         It is working in Chrome/Firefox/IE, confirmed not working in Edge/16\n            //         So we are manually appending the key if they can be inputted in the box\n            if (/(^|\\s)Edge\\/16\\./.test(navigator.userAgent)) {\n                key = inputtableKey(evt.key);\n            }\n\n            // shellRef is null if Web Chat is disabled\n            if (this.shellRef) {\n                this.shellRef.focus(key);\n            }\n        }\n    }\n\n    private saveChatviewPanelRef(chatviewPanelRef: HTMLElement) {\n        this.chatviewPanelRef = chatviewPanelRef;\n    }\n\n    private saveHistoryRef(historyWrapper: any) {\n        this.historyRef = historyWrapper && historyWrapper.getWrappedInstance();\n    }\n\n    private saveShellRef(shellWrapper: any) {\n        this.shellRef = shellWrapper && shellWrapper.getWrappedInstance();\n    }\n\n    componentDidMount() {\n        // Now that we're mounted, we know our dimensions. Put them in the store (this will force a re-render)\n        this.setSize();\n\n        const botConnection = this.props.directLine\n            ? (this.botConnection = new DirectLine(this.props.directLine))\n            : this.props.botConnection\n            ;\n\n        if (this.props.resize === 'window') {\n            window.addEventListener('resize', this.resizeListener);\n        }\n\n        this.store.dispatch<ChatActions>({ type: 'Start_Connection', user: this.props.user, bot: this.props.bot, botConnection, selectedActivity: this.props.selectedActivity });\n\n        this.connectionStatusSubscription = botConnection.connectionStatus$.subscribe(connectionStatus => {\n                if (this.props.speechOptions && this.props.speechOptions.speechRecognizer) {\n                    const refGrammarId = botConnection.referenceGrammarId;\n                    if (refGrammarId) {\n                        this.props.speechOptions.speechRecognizer.referenceGrammarId = refGrammarId;\n                    }\n                }\n                this.store.dispatch<ChatActions>({ type: 'Connection_Change', connectionStatus });\n            }\n        );\n\n        this.activitySubscription = botConnection.activity$.subscribe(\n            activity => this.handleIncomingActivity(activity),\n            error => konsole.log('activity$ error', error)\n        );\n\n        if (this.props.selectedActivity) {\n            this.selectedActivitySubscription = this.props.selectedActivity.subscribe(activityOrID => {\n                this.store.dispatch<ChatActions>({\n                    type: 'Select_Activity',\n                    selectedActivity: activityOrID.activity || this.store.getState().history.activities.find(activity => activity.id === activityOrID.id)\n                });\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.connectionStatusSubscription.unsubscribe();\n        this.activitySubscription.unsubscribe();\n        if (this.selectedActivitySubscription) {\n            this.selectedActivitySubscription.unsubscribe();\n        }\n        if (this.botConnection) {\n            this.botConnection.end();\n        }\n        window.removeEventListener('resize', this.resizeListener);\n    }\n\n    componentWillReceiveProps(nextProps: ChatProps) {\n        if (this.props.adaptiveCardsHostConfig !== nextProps.adaptiveCardsHostConfig) {\n            this.store.dispatch<ChatActions>({\n                type: 'Set_AdaptiveCardsHostConfig',\n                payload: nextProps.adaptiveCardsHostConfig\n            });\n        }\n\n        if (this.props.showUploadButton !== nextProps.showUploadButton) {\n            this.store.dispatch<ChatActions>({\n                type: 'Toggle_Upload_Button',\n                showUploadButton: nextProps.showUploadButton\n            });\n        }\n\n        if (this.props.chatTitle !== nextProps.chatTitle) {\n            this.store.dispatch<ChatActions>({\n                type: 'Set_Chat_Title',\n                chatTitle: nextProps.chatTitle\n            });\n        }\n    }\n\n    // At startup we do three render passes:\n    // 1. To determine the dimensions of the chat panel (nothing needs to actually render here, so we don't)\n    // 2. To determine the margins of any given carousel (we just render one mock activity so that we can measure it)\n    // 3. (this is also the normal re-render case) To render without the mock activity\n\n    render() {\n        const state = this.store.getState();\n        konsole.log('BotChat.Chat state', state);\n\n        // only render real stuff after we know our dimensions\n        return (\n            <Provider store={ this.store }>\n                <div\n                    className=\"wc-chatview-panel\"\n                    onKeyDownCapture={ this._handleKeyDownCapture }\n                    ref={ this._saveChatviewPanelRef }\n                >\n                    {\n                        !!state.format.chatTitle &&\n                            <div className=\"wc-header\">\n                                <span>{ typeof state.format.chatTitle === 'string' ? state.format.chatTitle : state.format.strings.title }</span>\n                            </div>\n                    }\n                    <MessagePane disabled={ this.props.disabled }>\n                        <History\n                            disabled={ this.props.disabled }\n                            onCardAction={ this._handleCardAction }\n                            ref={ this._saveHistoryRef }\n                        />\n                    </MessagePane>\n                    {\n                        !this.props.disabled && <Shell ref={ this._saveShellRef } />\n                    }\n                    {\n                        this.props.resize === 'detect' &&\n                            <ResizeDetector onresize={ this.resizeListener } />\n                    }\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport type IDoCardAction = (type: CardActionTypes, value: string | object) => void;\n\nexport const doCardAction = (\n    botConnection: IBotConnection,\n    from: User,\n    locale: string,\n    sendMessage: (value: string, user: User, locale: string) => void\n): IDoCardAction => (\n    type,\n    actionValue\n) => {\n    const text = (typeof actionValue === 'string') ? actionValue as string : undefined;\n    const value = (typeof actionValue === 'object') ? actionValue as object : undefined;\n\n    switch (type) {\n        case 'imBack':\n            if (typeof text === 'string') {\n                sendMessage(text, from, locale);\n            }\n            break;\n\n        case 'postBack':\n            sendPostBack(botConnection, text, value, from, locale);\n            break;\n\n        case 'call':\n        case 'openUrl':\n        case 'playAudio':\n        case 'playVideo':\n        case 'showImage':\n        case 'downloadFile':\n            window.open(text);\n            break;\n        case 'signin':\n            const loginWindow = window.open();\n            if (botConnection.getSessionId)  {\n                botConnection.getSessionId().subscribe(sessionId => {\n                    konsole.log('received sessionId: ' + sessionId);\n                    loginWindow.location.href = text + encodeURIComponent('&code_challenge=' + sessionId);\n                }, error => {\n                    konsole.log('failed to get sessionId', error);\n                });\n            } else {\n                loginWindow.location.href = text;\n            }\n            break;\n\n        default:\n            konsole.log('unknown button type', type);\n        }\n};\n\nexport const sendPostBack = (botConnection: IBotConnection, text: string, value: object, from: User, locale: string) => {\n    botConnection.postActivity({\n        type: 'message',\n        text,\n        value,\n        from,\n        locale\n    })\n    .subscribe(\n        id => konsole.log('success sending postBack', id),\n        error => konsole.log('failed to send postBack', error)\n    );\n};\n\nexport const renderIfNonempty = (value: any, renderer: (value: any) => JSX.Element ) => {\n    if (value !== undefined && value !== null && (typeof value !== 'string' || value.length > 0)) {\n        return renderer(value);\n    }\n};\n\nexport const classList = (...args: Array<string | boolean>) => {\n    return args.filter(Boolean).join(' ');\n};\n\n// note: container of this element must have CSS position of either absolute or relative\nconst ResizeDetector = (props: {\n    onresize: () => void\n}) =>\n    // adapted to React from https://github.com/developit/simple-element-resize-detector\n    <iframe\n        style={{\n            border: 'none',\n            height: '100%',\n            left: 0,\n            margin: '1px 0 0',\n            opacity: 0,\n            pointerEvents: 'none',\n            position: 'absolute',\n            top: '-100%',\n            visibility: 'hidden',\n            width: '100%'\n        }}\n        ref={ frame => {\n            if (frame) {\n                frame.contentWindow.onresize = props.onresize;\n            }\n        } }\n    />;\n\n// For auto-focus in some browsers, we synthetically insert keys into the chatbox.\n// By default, we insert keys when:\n// 1. evt.key.length === 1 (e.g. \"1\", \"A\", \"=\" keys), or\n// 2. evt.key is one of the map keys below (e.g. \"Add\" will insert \"+\", \"Decimal\" will insert \".\")\nconst INPUTTABLE_KEY: { [key: string]: string } = {\n    Add: '+',      // Numpad add key\n    Decimal: '.',  // Numpad decimal key\n    Divide: '/',   // Numpad divide key\n    Multiply: '*', // Numpad multiply key\n    Subtract: '-'  // Numpad subtract key\n};\n\nfunction inputtableKey(key: string) {\n    return key.length === 1 ? key : INPUTTABLE_KEY[key];\n}\n"]}