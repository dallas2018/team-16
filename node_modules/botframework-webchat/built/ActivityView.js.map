{"version":3,"file":"ActivityView.js","sourceRoot":"","sources":["../src/ActivityView.tsx"],"names":[],"mappings":";;;AACA,6BAA+B;AAC/B,2CAA8C;AAC9C,uCAAsC;AAEtC,iDAAgD;AAGhD,IAAM,WAAW,GAAG,UAAC,KAQpB;IACW,IAAA,+BAAW,EAAE,yCAAgB,EAAE,uEAAa,CAAW;IAE/D,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,gBAAgB,KAAK,UAAU;QAClC,oBAAC,mBAAQ,qBACL,WAAW,EAAG,WAAW,EACzB,QAAQ,EAAG,KAAK,CAAC,QAAQ,IACpB,UAAU,EACjB;;YAEF,6BAAK,SAAS,EAAC,SAAS,IAClB,WAAW,CAAC,GAAG,CAAC,UAAC,UAAU,EAAE,KAAK;gBAChC,OAAA,oBAAC,2BAAc,IACX,UAAU,EAAG,UAAU,EACvB,MAAM,EAAG,KAAK,CAAC,MAAM,EACrB,QAAQ,EAAG,KAAK,CAAC,QAAQ,EACzB,GAAG,EAAG,KAAK,EACX,YAAY,EAAG,KAAK,CAAC,YAAY,EACjC,WAAW,EAAG,KAAK,CAAC,WAAW,GACjC;YAPF,CAOE,CACL,CACC,CAAC;AACf,CAAC,CAAC;AAWF;IAAkC,wCAAsC;IACpE,sBAAY,KAAwB;eAChC,kBAAM,KAAK,CAAC;IAChB,CAAC;IAED,4CAAqB,GAArB,UAAsB,SAA4B;QAC9C,qCAAqC;QACrC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ;eAE1C,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM;eAEtC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,KAAK,SAAS;mBACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,KAAK,UAAU;mBACnD,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC;eACvC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;IACxD,CAAC;IAED,6BAAM,GAAN;QACI,IAAM,eAAmC,EAAjC,sBAAQ,EAAE,wCAAuB,CAAC;QAE1C,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YACpB,KAAK,SAAS;gBACV,MAAM,CAAC,CACH;oBACI,oBAAC,6BAAa,IACV,IAAI,EAAG,QAAQ,CAAC,IAAI,EACpB,MAAM,EAAG,QAAQ,CAAC,UAAU,EAC5B,WAAW,EAAG,KAAK,CAAC,WAAW,GACjC;oBACF,oBAAC,WAAW,IACR,WAAW,EAAG,QAAQ,CAAC,WAAW,EAClC,gBAAgB,EAAG,QAAQ,CAAC,gBAAgB,EAC5C,QAAQ,EAAG,KAAK,CAAC,QAAQ,EACzB,MAAM,EAAG,KAAK,CAAC,MAAM,EACrB,YAAY,EAAG,KAAK,CAAC,YAAY,EACjC,WAAW,EAAG,KAAK,CAAC,WAAW,EAC/B,IAAI,EAAG,KAAK,CAAC,IAAI,GACnB,CACA,CACT,CAAC;YAEN,KAAK,QAAQ;gBACT,MAAM,CAAC,6BAAK,SAAS,EAAC,WAAW,GAAE,CAAC;QAC5C,CAAC;IACL,CAAC;IACL,mBAAC;AAAD,CAAC,AA7CD,CAAkC,KAAK,CAAC,SAAS,GA6ChD;AA7CY,oCAAY","sourcesContent":["import { Activity, Attachment, AttachmentLayout } from 'botframework-directlinejs';\nimport * as React from 'react';\nimport { AttachmentView } from './Attachment';\nimport { Carousel } from './Carousel';\nimport { IDoCardAction } from './Chat';\nimport { FormattedText } from './FormattedText';\nimport { FormatState, SizeState } from './Store';\n\nconst Attachments = (props: {\n    attachmentLayout: AttachmentLayout;\n    attachments: Attachment[];\n    disabled: boolean;\n    format: FormatState;\n    onCardAction: IDoCardAction;\n    onImageLoad: () => void;\n    size: SizeState;\n}) => {\n    const { attachments, attachmentLayout, ...otherProps } = props;\n\n    if (!attachments || attachments.length === 0) {\n        return null;\n    }\n\n    return attachmentLayout === 'carousel' ?\n        <Carousel\n            attachments={ attachments }\n            disabled={ props.disabled }\n            { ...otherProps }\n        />\n    :\n        <div className=\"wc-list\">\n            { attachments.map((attachment, index) =>\n                <AttachmentView\n                    attachment={ attachment }\n                    format={ props.format }\n                    disabled={ props.disabled }\n                    key={ index }\n                    onCardAction={ props.onCardAction }\n                    onImageLoad={ props.onImageLoad }\n                />\n            ) }\n        </div>;\n};\n\nexport interface ActivityViewProps {\n    activity: Activity;\n    disabled: boolean;\n    format: FormatState;\n    onCardAction: IDoCardAction;\n    onImageLoad: () => void;\n    size: SizeState;\n}\n\nexport class ActivityView extends React.Component<ActivityViewProps, {}> {\n    constructor(props: ActivityViewProps) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps: ActivityViewProps) {\n        // if the activity changed, re-render\n        return this.props.activity !== nextProps.activity\n        // if the format changed, re-render\n            || this.props.format !== nextProps.format\n        // if it's a carousel and the size changed, re-render\n            || (this.props.activity.type === 'message'\n                && this.props.activity.attachmentLayout === 'carousel'\n                && this.props.size !== nextProps.size)\n            || !this.props.disabled !== !nextProps.disabled;\n    }\n\n    render() {\n        const { activity, ...props } = this.props;\n\n        switch (activity.type) {\n            case 'message':\n                return (\n                    <div>\n                        <FormattedText\n                            text={ activity.text }\n                            format={ activity.textFormat }\n                            onImageLoad={ props.onImageLoad }\n                        />\n                        <Attachments\n                            attachments={ activity.attachments }\n                            attachmentLayout={ activity.attachmentLayout }\n                            disabled={ props.disabled }\n                            format={ props.format }\n                            onCardAction={ props.onCardAction }\n                            onImageLoad={ props.onImageLoad }\n                            size={ props.size }\n                        />\n                    </div>\n                );\n\n            case 'typing':\n                return <div className=\"wc-typing\"/>;\n        }\n    }\n}\n"]}